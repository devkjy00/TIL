# 0~1로만 이루어진 문자열 S
# 모든 숫자가 같도록 만들기
# 1. 전체를 뒤집는다
# 2. 인접한 같은 숫자만 뒤집는다
# 둘 다 1회로 계산
# 최소횟수를 출력
import time 
s



start = time.time() 
part_0 = [i for i in s.split("1") if i]
part_1 = [i for i in s.split("0") if i]

print(min(len(part_0), len(part_1)))
end = time.time() 
print(f"{end - start:.5f} sec")
# 더 빠르다



############ 답안 ############

data = s

start = time.time() 
count0 = 0 # 전부 0으로 바꾸는 경우
count1 = 0 # 전부 1로 바꾸는 경우

# 첫 번째 원소에 대해서 처리
if data[0] == '1':
    count0 += 1
else:
    count1 += 1

# 두 번째 원소부터 모든 원소를 확인하며
for i in range(len(data) - 1):
    if data[i] != data[i + 1]:
        # 다음 수에서 1로 바뀌는 경우
        if data[i + 1] == '1':
            count0 += 1
        # 다음 수에서 0으로 바뀌는 경우
        else:
            count1 += 1

print(min(count0, count1))

end = time.time() 
print(f"{end - start:.5f} sec")
